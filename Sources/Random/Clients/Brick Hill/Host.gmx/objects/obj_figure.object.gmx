<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alive = 0;

figureID = id;
xPos = 0;
yPos = 0;
zPos = 0;
xRot = 0;
yRot = 0;
zRot = 0;
xScale = 1;
yScale = 1;
zScale = 1;
Arm = -1;
maxHealth = 100;
Health = maxHealth;
partColorHead = $00b7f3;
partColorTorso = $0000c6;
partColorLArm = $00b7f3;
partColorRArm = $00b7f3;
partColorLLeg = $99431c;
partColorRLeg = $99431c;
partStickerFace = "0";
partStickerTShirt = "0";
partStickerShirt = "0";
partStickerPants = "0";
partModelHat1 = "0";
partModelHat2 = "0";
partModelHat3 = "0";
maxSpeed = 4;
maxJumpHeight = 5;
Name = "Figure"+string(id);
Speech = "";

objFollow = -1;
pointFollow = false;
pointFollowX = 0;
pointFollowY = 0;
pointFollowZ = 0;



prev_xPos = xPos;
prev_yPos = yPos;
prev_zPos = zPos;
prev_xRot = xRot;
prev_yRot = yRot;
prev_zRot = zRot;
prev_xScale = xScale;
prev_yScale = yScale;
prev_zScale = zScale;
prev_partColorHead = partColorHead;
prev_partColorTorso = partColorTorso;
prev_partColorLArm = partColorLArm;
prev_partColorRArm = partColorRArm;
prev_partColorLLeg = partColorLLeg;
prev_partColorRLeg = partColorRLeg;
prev_partStickerFace = partStickerFace;
prev_partStickerTShirt = partStickerTShirt;
prev_partStickerShirt = partStickerShirt;
prev_partStickerPants = partStickerPants;
prev_partModelHat1 = partModelHat1;
prev_partModelHat2 = partModelHat2;
prev_partModelHat3 = partModelHat3;
prev_name = Name;
prev_Speech = Speech;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//prev check
var id_string;
id_string = "";
buffer_clear(global.BUFFER);
buffer_write_uint8(global.BUFFER,12);
buffer_write_uint32(global.BUFFER,figureID);
if(prev_name != Name) {
   id_string += "A";
}
if(prev_xPos != xPos) {
    id_string += "B";
}
if(prev_yPos != yPos) {
    id_string += "C";
}
if(prev_zPos != zPos) {
    id_string += "D";
}
if(prev_xRot != xRot) {
    id_string += "E";
}
if(prev_yRot != yRot) {
    id_string += "F";
}
if(prev_zRot != zRot) {
    id_string += "G";
}
if(prev_xScale != xScale) {
    id_string += "H";
}
if(prev_yScale != yScale) {
    id_string += "I";
}
if(prev_zScale != zScale) {
    id_string += "J";
}
if(prev_partColorHead != partColorHead) {
   id_string += "K";
}
if(prev_partColorTorso != partColorTorso) {
   id_string += "L";
}
if(prev_partColorLArm != partColorLArm) {
   id_string += "M";
}
if(prev_partColorRArm != partColorRArm) {
   id_string += "N";
}
if(prev_partColorLLeg != partColorLLeg) {
   id_string += "O";
}
if(prev_partColorRLeg != partColorRLeg) {
   id_string += "P";
}
if(prev_partStickerFace != partStickerFace) {
   id_string += "Q";
}
if(prev_partStickerTShirt != partStickerTShirt) {
   id_string += "R";
}
if(prev_partStickerShirt != partStickerShirt) {
   id_string += "S";
}
if(prev_partStickerPants != partStickerPants) {
   id_string += "T";
}
if(prev_partModelHat1 != partModelHat1) {
   id_string += "U";
}
if(prev_partModelHat2 != partModelHat2) {
   id_string += "V";
}
if(prev_partModelHat3 != partModelHat3) {
   id_string += "W";
}
if(prev_Speech != Speech) {
   id_string += "X";
}
buffer_write_string(global.BUFFER,id_string);

if(prev_name != Name) {
    buffer_write_string(global.BUFFER,Name);
}
if(prev_xPos != xPos) {
    buffer_write_float32(global.BUFFER,xPos);
}
if(prev_yPos != yPos) {
    buffer_write_float32(global.BUFFER,yPos);
}
if(prev_zPos != zPos) {
    buffer_write_float32(global.BUFFER,zPos);
}
if(prev_xRot != xRot) {
    buffer_write_uint32(global.BUFFER,xRot);
}
if(prev_yRot != yRot) {
    buffer_write_uint32(global.BUFFER,yRot);
}
if(prev_zRot != zRot) {
    buffer_write_uint32(global.BUFFER,zRot);
}
if(prev_xScale != xScale) {
    buffer_write_float32(global.BUFFER,xScale);
}
if(prev_yScale != yScale) {
    buffer_write_float32(global.BUFFER,yScale);
}
if(prev_zScale != zScale) {
    buffer_write_float32(global.BUFFER,zScale);
}
if(prev_partColorHead != partColorHead) {
    buffer_write_uint32(global.BUFFER,partColorHead);
}
if(prev_partColorTorso != partColorTorso) {
    buffer_write_uint32(global.BUFFER,partColorTorso);
}
if(prev_partColorLArm != partColorLArm) {
    buffer_write_uint32(global.BUFFER,partColorLArm);
}
if(prev_partColorRArm != partColorRArm) {
    buffer_write_uint32(global.BUFFER,partColorRArm);
}
if(prev_partColorLLeg != partColorLLeg) {
    buffer_write_uint32(global.BUFFER,partColorLLeg);
}
if(prev_partColorRLeg != partColorRLeg) {
    buffer_write_uint32(global.BUFFER,partColorRLeg);
}
if(prev_partStickerFace != partStickerFace) {
    buffer_write_string(global.BUFFER,partStickerFace);
}
if(prev_partStickerTShirt != partStickerTShirt) {
    buffer_write_string(global.BUFFER,partStickerTShirt);
}
if(prev_partStickerShirt != partStickerShirt) {
    buffer_write_string(global.BUFFER,partStickerShirt);
}
if(prev_partStickerPants != partStickerPants) {
    buffer_write_string(global.BUFFER,partStickerPants);
}
if(prev_partModelHat1 != partModelHat1) {
    buffer_write_string(global.BUFFER,partModelHat1);
}
if(prev_partModelHat2 != partModelHat2) {
    buffer_write_string(global.BUFFER,partModelHat2);
}
if(prev_partModelHat3 != partModelHat3) {
    buffer_write_string(global.BUFFER,partModelHat3);
}
if(prev_Speech != Speech) {
   buffer_write_string(global.BUFFER,Speech);
}

if(string_length(id_string) &gt; 0) {
    buffer_zlib_compress(global.BUFFER);
    with obj_client {socket_write_message(SOCKET, global.BUFFER);}
}


//prev vars
prev_xPos = xPos;
prev_yPos = yPos;
prev_zPos = zPos;
prev_xRot = xRot;
prev_yRot = yRot;
prev_zRot = zRot;
prev_xScale = xScale;
prev_yScale = yScale;
prev_zScale = zScale;
prev_partColorHead = partColorHead;
prev_partColorTorso = partColorTorso;
prev_partColorLArm = partColorLArm;
prev_partColorRArm = partColorRArm;
prev_partColorLLeg = partColorLLeg;
prev_partColorRLeg = partColorRLeg;
prev_partStickerFace = partStickerFace;
prev_partStickerTShirt = partStickerTShirt;
prev_partStickerShirt = partStickerShirt;
prev_partStickerPants = partStickerPants;
prev_partModelHat1 = partModelHat1;
prev_partModelHat2 = partModelHat2;
prev_partModelHat3 = partModelHat3;
prev_name = Name;
prev_Speech = Speech;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
